# Development Restrictions - DO NOT

## ðŸš« NEVER Do These Actions

### Package Management
- **NEVER install packages** - ask user for approval first
- **NEVER run Drizzle migrations** - user handles migrations manually
- **NEVER edit package.json** without explicit permission

### Translation System
- **NEVER edit [content/](mdc:content/) files directly** - user handles translations
- Only suggest new translation keys that need to be added
- All user-facing text must use `ttt()` function

### Database Operations
- **NEVER run database migrations or schema changes**
- **NEVER import database utilities in client components** (causes TLS errors)
- **NEVER put `redirect()` inside try-catch blocks** (causes NEXT_REDIRECT errors)

### File Patterns
- **NEVER use hardcoded text** - always use `ttt()` with English keys
- **NEVER create uppercase filenames** - all files must be lowercase
- **NEVER fetch data in client components** - pass from server components as props

## Required Approval Actions
Ask user before:
- Installing new dependencies
- Making database schema changes
- Adding new external services
- Changing build configuration

## Error Prevention
- API errors are for logs only - never forward to frontend
- Always validate user access to companies/resources
- Use proper TypeScript types from [db/tables/](mdc:db/tables/)

## Development Flow
1. Check existing patterns in similar files
2. Follow established project structure
3. Use proper client/server separation
4. Implement proper error handling
5. Add translation keys (suggest to user)
6. Test before considering complete
